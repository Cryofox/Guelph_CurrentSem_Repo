/* 
This program tests the following Features:
	typedefs 
		int, struct, float, char, other typedefs (identifiers)
	Global Declerations
		int, struct, float, char
	Functions (not calling them)
	Relational Operators, Order of Arithmetic Operations.
	Post-Pre Processor Increment and Decrement.
		Floats, Ints, char, I guess struct could to just like in C...
		although not sure what that'd result in tbh.

		also tests for newline and nullterm
		tests for float 0.0e+24 , - also works.
Chars are in the form
char c = 'c';

//Structs
struct lemons{
	int juice;
};

struct lemons newLemons()
{
	struct lemons lemon;
	return lemon;
}
*/


/* Type Defines */
typedef int  i_A;
typedef char c_A, c_B, c_C;
typedef float f_A, f_B, f_C;
/*
Typedefs are illegal on structs now, as you can't typedef during Decleration,
and you must declare after typedefs. Meaning this type of linking is illegal. Sorry :/
typedef struct somestruct s_A, s_B, s_C;
*/
typedef int  _A, _0123456789A;

typedef _A somenewInt;
typedef int simpleArray[10];

int a;
char c;
float b;

struct anotherStruct
{
int varX;
int varY;
};

struct somestruct{
	int x;
	int y;
	int z;
	float a;
	char c;
	struct anotherStruct innerStruct;
};
float y;
int arX[12];
struct somestruct structArray[10];




_A tempA;
simpleArray array;
int Fire2()
{
struct anotherStruct myStruct;
int x;
int hello;
	/*Notice how It doesn't care whats returning in abs*/
	return 2;
}



char ArrayAccess(int fire)
{
	struct anotherStruct myStructArray[10];
	int hey[10];
	int x;

	/*Struct Arrays :) */
	myStructArray[10].varX=2;

	x= hey[10];
	return 'c';
}

int WhileLoop()
{
	int x;

	x=0;
	while(x<10)
	{
		x++;
	}
	return 1;
}

int ForLoop()
{
	int x;

	for(x=0;x<10;x++)
	{

	}
	return 0;
}


int main ()
{
	int qwep;
	float y;
	char v;
	int z;
	int x;



	return 1;
}

