// CodeContracts
// 
// Copyright (c) Microsoft Corporation
// 
// All rights reserved. 
// 
// MIT License
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// File System.Web.UI.WebControls.GridView.cs
// Automatically generated contract file.
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Diagnostics.Contracts;
using System;

// Disable the "this variable is not used" warning as every field would imply it.
#pragma warning disable 0414
// Disable the "this variable is never assigned to".
#pragma warning disable 0067
// Disable the "this event is never assigned to".
#pragma warning disable 0649
// Disable the "this variable is never used".
#pragma warning disable 0169
// Disable the "new keyword not required" warning.
#pragma warning disable 0109
// Disable the "extern without DllImport" warning.
#pragma warning disable 0626
// Disable the "could hide other member" warning, can happen on certain properties.
#pragma warning disable 0108


namespace System.Web.UI.WebControls
{
  public partial class GridView : CompositeDataBoundControl, IPostBackContainer, System.Web.UI.IPostBackEventHandler, ICallbackContainer, System.Web.UI.ICallbackEventHandler, IPersistedSelector, System.Web.UI.IDataKeysControl, IDataBoundListControl, IDataBoundControl, IFieldControl
  {
    #region Methods and constructors
    protected virtual new AutoGeneratedField CreateAutoGeneratedColumn(AutoGeneratedFieldProperties fieldProperties)
    {
      return default(AutoGeneratedField);
    }

    protected override int CreateChildControls(System.Collections.IEnumerable dataSource, bool dataBinding)
    {
      return default(int);
    }

    protected virtual new Table CreateChildTable()
    {
      return default(Table);
    }

    protected virtual new System.Collections.ICollection CreateColumns(PagedDataSource dataSource, bool useDataSource)
    {
      return default(System.Collections.ICollection);
    }

    protected override Style CreateControlStyle()
    {
      return default(Style);
    }

    protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments()
    {
      return default(System.Web.UI.DataSourceSelectArguments);
    }

    protected virtual new GridViewRow CreateRow(int rowIndex, int dataSourceIndex, DataControlRowType rowType, DataControlRowState rowState)
    {
      return default(GridViewRow);
    }

    public sealed override void DataBind()
    {
    }

    public virtual new void DeleteRow(int rowIndex)
    {
    }

    protected virtual new void ExtractRowValues(System.Collections.Specialized.IOrderedDictionary fieldValues, GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey)
    {
    }

    protected virtual new string GetCallbackResult()
    {
      return default(string);
    }

    protected virtual new string GetCallbackScript(IButtonControl buttonControl, string argument)
    {
      return default(string);
    }

    public GridView()
    {
    }

    protected virtual new void InitializePager(GridViewRow row, int columnSpan, PagedDataSource pagedDataSource)
    {
    }

    protected virtual new void InitializeRow(GridViewRow row, DataControlField[] fields)
    {
    }

    public virtual new bool IsBindableType(Type type)
    {
      return default(bool);
    }

    protected internal override void LoadControlState(Object savedState)
    {
    }

    protected override void LoadViewState(Object savedState)
    {
    }

    protected override bool OnBubbleEvent(Object source, EventArgs e)
    {
      return default(bool);
    }

    protected override void OnDataPropertyChanged()
    {
    }

    protected override void OnDataSourceViewChanged(Object sender, EventArgs e)
    {
    }

    protected internal override void OnInit(EventArgs e)
    {
    }

    protected virtual new void OnPageIndexChanged(EventArgs e)
    {
    }

    protected virtual new void OnPageIndexChanging(GridViewPageEventArgs e)
    {
    }

    protected override void OnPagePreLoad(Object sender, EventArgs e)
    {
    }

    protected internal override void OnPreRender(EventArgs e)
    {
    }

    protected virtual new void OnRowCancelingEdit(GridViewCancelEditEventArgs e)
    {
    }

    protected virtual new void OnRowCommand(GridViewCommandEventArgs e)
    {
    }

    protected virtual new void OnRowCreated(GridViewRowEventArgs e)
    {
    }

    protected virtual new void OnRowDataBound(GridViewRowEventArgs e)
    {
    }

    protected virtual new void OnRowDeleted(GridViewDeletedEventArgs e)
    {
    }

    protected virtual new void OnRowDeleting(GridViewDeleteEventArgs e)
    {
    }

    protected virtual new void OnRowEditing(GridViewEditEventArgs e)
    {
    }

    protected virtual new void OnRowUpdated(GridViewUpdatedEventArgs e)
    {
    }

    protected virtual new void OnRowUpdating(GridViewUpdateEventArgs e)
    {
    }

    protected virtual new void OnSelectedIndexChanged(EventArgs e)
    {
    }

    protected virtual new void OnSelectedIndexChanging(GridViewSelectEventArgs e)
    {
    }

    protected virtual new void OnSorted(EventArgs e)
    {
    }

    protected virtual new void OnSorting(GridViewSortEventArgs e)
    {
    }

    protected internal override void PerformDataBinding(System.Collections.IEnumerable data)
    {
    }

    protected internal virtual new void PrepareControlHierarchy()
    {
    }

    protected virtual new void RaiseCallbackEvent(string eventArgument)
    {
    }

    protected virtual new void RaisePostBackEvent(string eventArgument)
    {
    }

    protected internal override void Render(System.Web.UI.HtmlTextWriter writer)
    {
    }

    protected internal override Object SaveControlState()
    {
      return default(Object);
    }

    protected override Object SaveViewState()
    {
      return default(Object);
    }

    public void SelectRow(int rowIndex)
    {
    }

    public void SetEditRow(int rowIndex)
    {
    }

    public void SetPageIndex(int rowIndex)
    {
    }

    public virtual new void Sort(string sortExpression, SortDirection sortDirection)
    {
    }

    string System.Web.UI.ICallbackEventHandler.GetCallbackResult()
    {
      return default(string);
    }

    void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument)
    {
    }

    void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument)
    {
    }

    string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl buttonControl, string argument)
    {
      return default(string);
    }

    System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl buttonControl)
    {
      return default(System.Web.UI.PostBackOptions);
    }

    protected override void TrackViewState()
    {
    }

    public virtual new void UpdateRow(int rowIndex, bool causesValidation)
    {
    }
    #endregion

    #region Properties and indexers
    public virtual new bool AllowPaging
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool AllowSorting
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public TableItemStyle AlternatingRowStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new bool AutoGenerateColumns
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool AutoGenerateDeleteButton
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool AutoGenerateEditButton
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool AutoGenerateSelectButton
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new string BackImageUrl
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    public virtual new GridViewRow BottomPagerRow
    {
      get
      {
        return default(GridViewRow);
      }
    }

    public virtual new string Caption
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    public virtual new TableCaptionAlign CaptionAlign
    {
      get
      {
        return default(TableCaptionAlign);
      }
      set
      {
      }
    }

    public virtual new int CellPadding
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public virtual new int CellSpacing
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public virtual new string[] ClientIDRowSuffix
    {
      get
      {
        return default(string[]);
      }
      set
      {
      }
    }

    public DataKeyArray ClientIDRowSuffixDataKeys
    {
      get
      {
        return default(DataKeyArray);
      }
    }

    public virtual new DataControlFieldCollection Columns
    {
      get
      {
        return default(DataControlFieldCollection);
      }
    }

    public System.Web.UI.IAutoFieldGenerator ColumnsGenerator
    {
      get
      {
        return default(System.Web.UI.IAutoFieldGenerator);
      }
      set
      {
      }
    }

    public virtual new string[] DataKeyNames
    {
      get
      {
        return default(string[]);
      }
      set
      {
      }
    }

    public virtual new DataKeyArray DataKeys
    {
      get
      {
        return default(DataKeyArray);
      }
    }

    public virtual new int EditIndex
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public TableItemStyle EditRowStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public TableItemStyle EmptyDataRowStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new System.Web.UI.ITemplate EmptyDataTemplate
    {
      get
      {
        return default(System.Web.UI.ITemplate);
      }
      set
      {
      }
    }

    public virtual new string EmptyDataText
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    public virtual new bool EnableModelValidation
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool EnablePersistedSelection
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool EnableSortingAndPagingCallbacks
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new GridViewRow FooterRow
    {
      get
      {
        return default(GridViewRow);
      }
    }

    public TableItemStyle FooterStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new GridLines GridLines
    {
      get
      {
        return default(GridLines);
      }
      set
      {
      }
    }

    public virtual new GridViewRow HeaderRow
    {
      get
      {
        return default(GridViewRow);
      }
    }

    public TableItemStyle HeaderStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new HorizontalAlign HorizontalAlign
    {
      get
      {
        return default(HorizontalAlign);
      }
      set
      {
      }
    }

    public virtual new int PageCount
    {
      get
      {
        return default(int);
      }
    }

    public virtual new int PageIndex
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public virtual new PagerSettings PagerSettings
    {
      get
      {
        return default(PagerSettings);
      }
    }

    public TableItemStyle PagerStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new System.Web.UI.ITemplate PagerTemplate
    {
      get
      {
        return default(System.Web.UI.ITemplate);
      }
      set
      {
      }
    }

    public virtual new int PageSize
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public virtual new string RowHeaderColumn
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    public virtual new GridViewRowCollection Rows
    {
      get
      {
        return default(GridViewRowCollection);
      }
    }

    public TableItemStyle RowStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new DataKey SelectedDataKey
    {
      get
      {
        return default(DataKey);
      }
    }

    public virtual new int SelectedIndex
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public virtual new DataKey SelectedPersistedDataKey
    {
      get
      {
        return default(DataKey);
      }
      set
      {
      }
    }

    public virtual new GridViewRow SelectedRow
    {
      get
      {
        return default(GridViewRow);
      }
    }

    public TableItemStyle SelectedRowStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public Object SelectedValue
    {
      get
      {
        return default(Object);
      }
    }

    public virtual new bool ShowFooter
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool ShowHeader
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new bool ShowHeaderWhenEmpty
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public virtual new SortDirection SortDirection
    {
      get
      {
        return default(SortDirection);
      }
    }

    public TableItemStyle SortedAscendingCellStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public TableItemStyle SortedAscendingHeaderStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public TableItemStyle SortedDescendingCellStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public TableItemStyle SortedDescendingHeaderStyle
    {
      get
      {
        return default(TableItemStyle);
      }
    }

    public virtual new string SortExpression
    {
      get
      {
        return default(string);
      }
    }

    DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
    {
      get
      {
        return default(DataKeyArray);
      }
    }

    string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
    {
      get
      {
        return default(string[]);
      }
      set
      {
      }
    }

    string System.Web.UI.WebControls.IDataBoundControl.DataMember
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    Object System.Web.UI.WebControls.IDataBoundControl.DataSource
    {
      get
      {
        return default(Object);
      }
      set
      {
      }
    }

    string System.Web.UI.WebControls.IDataBoundControl.DataSourceID
    {
      get
      {
        return default(string);
      }
      set
      {
      }
    }

    System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
    {
      get
      {
        return default(System.Web.UI.IDataSource);
      }
    }

    string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
    {
      get
      {
        return default(string[]);
      }
      set
      {
      }
    }

    DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys
    {
      get
      {
        return default(DataKeyArray);
      }
    }

    bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
    {
      get
      {
        return default(DataKey);
      }
    }

    int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator
    {
      get
      {
        return default(System.Web.UI.IAutoFieldGenerator);
      }
      set
      {
      }
    }

    DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey
    {
      get
      {
        return default(DataKey);
      }
      set
      {
      }
    }

    protected override System.Web.UI.HtmlTextWriterTag TagKey
    {
      get
      {
        return default(System.Web.UI.HtmlTextWriterTag);
      }
    }

    public virtual new GridViewRow TopPagerRow
    {
      get
      {
        return default(GridViewRow);
      }
    }

    public virtual new bool UseAccessibleHeader
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }
    #endregion

    #region Events
    public event EventHandler PageIndexChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewPageEventHandler PageIndexChanging
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewCancelEditEventHandler RowCancelingEdit
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewCommandEventHandler RowCommand
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewRowEventHandler RowCreated
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewRowEventHandler RowDataBound
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewDeletedEventHandler RowDeleted
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewDeleteEventHandler RowDeleting
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewEditEventHandler RowEditing
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewUpdatedEventHandler RowUpdated
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewUpdateEventHandler RowUpdating
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler SelectedIndexChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewSelectEventHandler SelectedIndexChanging
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler Sorted
    {
      add
      {
      }
      remove
      {
      }
    }

    public event GridViewSortEventHandler Sorting
    {
      add
      {
      }
      remove
      {
      }
    }
    #endregion
  }
}
