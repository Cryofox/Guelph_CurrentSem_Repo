digraph G{
"FC:_[0]" -> "FC:func[1]";
"FC:func[1]" -> "Exp:[2]";
"Exp:[2]" -> "Return:[3]";
"Return:[3]" -> "1[4]";
"FC:_[0]" -> "FC:_[5]";
"FC:_[5]" -> "FC:main[6]";
"FC:main[6]" -> "Exp:[7]";
"Exp:[7]" -> "=[8]";
"=[8]" -> "x[9]";
"=[8]" -> "0[10]";
"Exp:[7]" -> "Exp:[11]";
"Exp:[11]" -> "while:[12]";
"while:[12]" -> "&&[13]";
"&&[13]" -> "<[14]";
"<[14]" -> "x[15]";
"<[14]" -> "10[16]";
"&&[13]" -> "<[17]";
"<[17]" -> "x[18]";
"<[17]" -> "20[19]";
"while:[12]" -> "Exp:[20]";
"Exp:[20]" -> "Exp:[21]";
"Exp:[21]" -> "Call:[22]";
"Call:[22]" -> "puti[23]";
"Call:[22]" -> "x[24]";
"Exp:[21]" -> "Exp:[25]";
"Exp:[25]" -> "Use:[26]";
"Use:[26]" -> "x[27]";
"Use:[26]" -> "=[28]";
"=[28]" -> "x[29]";
"=[28]" -> "+[30]";
"+[30]" -> "x[31]";
"+[30]" -> "1[32]";
"Exp:[11]" -> "Exp:[33]";
"Exp:[33]" -> "Return:[34]";
"Return:[34]" -> "0[35]";
"FC:_[5]" -> "FC:_[36]";
"FC:_[36]" -> "FC:arithmetic_Float[37]";
"FC:arithmetic_Float[37]" -> "Exp:[38]";
"Exp:[38]" -> "=[39]";
"=[39]" -> "f[40]";
"=[39]" -> "4.50000[41]";
"Exp:[38]" -> "Exp:[42]";
"Exp:[42]" -> "=[43]";
"=[43]" -> "f[44]";
"=[43]" -> "+[45]";
"+[45]" -> "4.50000[46]";
"+[45]" -> "1.00000[47]";
"Exp:[42]" -> "Exp:[48]";
"Exp:[48]" -> "Call:[49]";
"Call:[49]" -> "putf[50]";
"Call:[49]" -> "f[51]";
"Exp:[48]" -> "Exp:[52]";
"Exp:[52]" -> "Return:[53]";
"Return:[53]" -> "0[54]";
"FC:_[36]" -> "FC:arithmetic_Int[55]";
"FC:arithmetic_Int[55]" -> "Exp:[56]";
"Exp:[56]" -> "=[57]";
"=[57]" -> "x[58]";
"=[57]" -> "2[59]";
"Exp:[56]" -> "Exp:[60]";
"Exp:[60]" -> "=[61]";
"=[61]" -> "y[62]";
"=[61]" -> "4[63]";
"Exp:[60]" -> "Exp:[64]";
"Exp:[64]" -> "=[65]";
"=[65]" -> "z[66]";
"=[65]" -> "+[67]";
"+[67]" -> "*[68]";
"*[68]" -> "y[69]";
"*[68]" -> "x[70]";
"+[67]" -> "2[71]";
"Exp:[64]" -> "Exp:[72]";
"Exp:[72]" -> "Call:[73]";
"Call:[73]" -> "puti[74]";
"Call:[73]" -> "z[75]";
"Exp:[72]" -> "Exp:[76]";
"Exp:[76]" -> "Return:[77]";
"Return:[77]" -> "1[78]";
}
