// CodeContracts
// 
// Copyright (c) Microsoft Corporation
// 
// All rights reserved. 
// 
// MIT License
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Diagnostics.Contracts;
using Microsoft.Pex.Engine.Exceptions;

namespace ChunkerTest
{
  public partial class ChunkerTest
  {
[TestMethod]
[PexGeneratedBy(typeof(global::ChunkerTest.ChunkerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor01()
{
    try
    {
      if (!PexContract.HasRequiredRuntimeContracts
          (typeof(Chunker), (PexRuntimeContractsFlags)4223))
        Assert.Inconclusive
            ("assembly assembly Samples is not instrumented with runtime contracts");
      Chunker chunker;
      chunker = this.Constructor((string)null, 0);
      throw new AssertFailedException();
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(global::ChunkerTest.ChunkerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02()
{
    try
    {
      if (!PexContract.HasRequiredRuntimeContracts
          (typeof(Chunker), (PexRuntimeContractsFlags)4223))
        Assert.Inconclusive
            ("assembly assembly Samples is not instrumented with runtime contracts");
      Chunker chunker;
      chunker = this.Constructor((string)null, 1);
      throw new AssertFailedException();
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(global::ChunkerTest.ChunkerTest))]
public void Constructor03()
{
    Chunker chunker;
    chunker = this.Constructor("", 1);
    Assert.IsNotNull((object)chunker);
    Assert.AreEqual<int>(1, chunker.ChunkSize);
}
  }
}
